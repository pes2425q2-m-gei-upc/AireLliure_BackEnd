name: CI/CD Pipeline

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

jobs:
  lint:
    name: Run Lint Checks
    runs-on: ubuntu-latest
    outputs:
      lint_status: ${{ steps.lint.outcome }}
    
    env:
      DJANGO_SETTINGS_MODULE: AireLliure_BackEnd.AireLliure.settings
      PYTHON_VERSION: 3.12

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt     
          pip uninstall -y flake8
          pip install pylint>=3.0 pylint-django==2.6.1

      - name: Run Linting
        id: lint
        run: |
          pylint --rcfile=.pylintrc --load-plugins pylint_django .
    
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: lint
    outputs:
      test_status: ${{ steps.test.outcome }}

    env:
      DJANGO_SETTINGS_MODULE: AireLliure.test_settings
      PYTHON_VERSION: 3.12

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-django

      - name: Run migrations
        run: python manage.py migrate

      - name: Run tests
        run: pytest

  sonarcloud:
    name: Analyze with SonarCloud
    runs-on: ubuntu-latest
    needs: [lint, test]
    if: ${{ success() }}

    env:
      PYTHON_VERSION: 3.12

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        env:
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  deploy:
    name: Deploy to Render
    runs-on: ubuntu-latest
    needs: [lint, test, sonarcloud]
    if: |
      success() && github.ref_name == 'main'

    steps:
      - name: Trigger Render Deploy Hook
        run: |
          curl -X POST "${{ secrets.RENDER_DEPLOY_HOOK }}"
